name: IaC - Terraform Plan & Apply (Azure)

on:
  push:
    branches: [ main, master ]
    paths:
      - 'infra/**'
      - '.github/workflows/terraform.yml'
  pull_request:
    paths:
      - 'infra/**'
  workflow_dispatch:
    inputs:
      apply:
        description: 'Apply changes'
        type: boolean
        default: false

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_CLI_ARGS_init: -upgrade
      TF_IN_AUTOMATION: true
      TF_INPUT: false
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        working-directory: infra
        run: |
          if [ -f backend.tf ]; then echo "Using committed backend"; else cp backend.tf.example backend.tf; fi
          terraform init

      - name: Terraform Validate
        working-directory: infra
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: infra
        env:
          TF_VAR_location: ${{ vars.AZURE_LOCATION || 'eastus' }}
          TF_VAR_environment: ${{ vars.ENVIRONMENT || 'dev' }}
        run: |
          terraform plan -input=false -out=tfplan

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: infra/tfplan

      - name: Terraform Apply (auto on main)
        if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.apply == true)
        working-directory: infra
        env:
          TF_VAR_location: ${{ vars.AZURE_LOCATION || 'eastus' }}
          TF_VAR_environment: ${{ vars.ENVIRONMENT || 'dev' }}
        run: terraform apply -input=false -auto-approve tfplan || terraform apply -input=false -auto-approve

