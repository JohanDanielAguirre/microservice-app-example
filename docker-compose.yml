version: "3.8"

services:
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  users-api:
    build: ./users-api
    container_name: users-api
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - SERVER_PORT=8083
    ports:
      - "8083:8083"

  auth-api:
    build: ./auth-api
    container_name: auth-api
    environment:
      - AUTH_API_PORT=8000
      - USERS_API_ADDRESS=http://users-api:8083
      - JWT_SECRET=${JWT_SECRET}
      - CB_ENABLED=true
      - CB_TIMEOUT_MS=2000
      - CB_RESET_TIMEOUT_MS=10000
      - CB_ERROR_THRESHOLD=5
      - CB_REQUEST_TIMEOUT_MS=1500
    ports:
      - "8000:8000"
    depends_on:
      - users-api

  todos-api:
    build: ./todos-api
    container_name: todos-api
    environment:
      - TODO_API_PORT=8082
      - JWT_SECRET=${JWT_SECRET}
      # Forzar la URL de Redis dentro de la red de Docker Compose (evita localhost)
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    ports:
      - "8082:8082"
    depends_on:
      - redis

  log-message-processor:
    build: ./log-message-processor
    container_name: log-message-processor
    environment:
      # Forzar la URL de Redis para este servicio tambi√©n
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    depends_on:
      - redis

  frontend:
    build: ./frontend
    container_name: frontend
    environment:
      - PORT=8080
      - AUTH_API_ADDRESS=http://auth-api:8000
      - TODOS_API_ADDRESS=http://todos-api:8082
    ports:
      - "8080:8080"
    depends_on:
      - auth-api
      - todos-api
